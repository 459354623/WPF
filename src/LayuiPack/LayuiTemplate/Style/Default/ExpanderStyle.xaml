<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Lay="clr-namespace:LayuiTemplate.Control">
    <Style x:Key="LayExpanderStyle" TargetType="{x:Type Lay:LayExpander}">
        <Style.Resources>
            <ControlTemplate x:Key="DownLayExpander" TargetType="Lay:LayExpander">
                <Grid Background="{TemplateBinding HeaderBackground}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ToggleButton
                        x:Name="header"
                        Height="50"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding HeaderBackground}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        FocusVisualStyle="{x:Null}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border
                                    x:Name="bg"
                                    Background="{TemplateBinding Background}"
                                    Opacity="0.7">
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Path
                                            Grid.Column="1"
                                            Width="15"
                                            Height="10"
                                            VerticalAlignment="Center"
                                            Data="M533.333333 516.266667l-174.933333-170.666667-64 59.733333 234.666667 234.666667L768 405.333333l-59.733333-59.733333-174.933334 170.666667z"
                                            Fill="{TemplateBinding Foreground}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Fill">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform x:Name="RotateTransform" Angle="0" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="bg" Property="Opacity" Value="1" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="RotateTransform"
                                                        Storyboard.TargetProperty="Angle"
                                                        To="180"
                                                        Duration="0:0:0.3" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="RotateTransform"
                                                        Storyboard.TargetProperty="Angle"
                                                        To="0"
                                                        Duration="0:0:0.3" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter TargetName="bg" Property="Opacity" Value="1" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                    <StackPanel
                        x:Name="contentPanel"
                        Grid.Row="1"
                        Background="{TemplateBinding Background}">
                        <Grid x:Name="contentAnimationGrid">
                            <ContentPresenter x:Name="content" />
                        </Grid>
                    </StackPanel>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="LeftLayExpander" TargetType="Lay:LayExpander" />
            <ControlTemplate x:Key="RightLayExpander" TargetType="Lay:LayExpander" />
            <ControlTemplate x:Key="UpLayExpander" TargetType="Lay:LayExpander">
                <Grid Background="{TemplateBinding HeaderBackground}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="contentPanel" Background="{TemplateBinding Background}">
                        <Grid x:Name="contentAnimationGrid">
                            <ContentPresenter x:Name="content" />
                        </Grid>
                    </StackPanel>
                    <ToggleButton
                        x:Name="header"
                        Grid.Row="1"
                        Height="{TemplateBinding HeaderHeight}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding HeaderBackground}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        FocusVisualStyle="{x:Null}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border
                                    x:Name="bg"
                                    Background="{TemplateBinding Background}"
                                    Opacity="0.7">
                                    <Grid Margin="{TemplateBinding Padding}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Path
                                            Grid.Column="1"
                                            Width="15"
                                            Height="10"
                                            VerticalAlignment="Center"
                                            Data="M533.333333 516.266667l-174.933333-170.666667-64 59.733333 234.666667 234.666667L768 405.333333l-59.733333-59.733333-174.933334 170.666667z"
                                            Fill="{TemplateBinding Foreground}"
                                            RenderTransformOrigin="0.5,0.5"
                                            Stretch="Fill">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform x:Name="RotateTransform" Angle="180" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="bg" Property="Opacity" Value="1" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="RotateTransform"
                                                        Storyboard.TargetProperty="Angle"
                                                        To="0"
                                                        Duration="0:0:0.3" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetName="RotateTransform"
                                                        Storyboard.TargetProperty="Angle"
                                                        To="180"
                                                        Duration="0:0:0.3" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter TargetName="bg" Property="Opacity" Value="1" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                </Grid>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="ExpandDirection" Value="Down" />
        <Setter Property="HeaderHeight" Value="50" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HeaderBackground" Value="#393D49" />
        <Setter Property="Background" Value="#282B33" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="20,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ExpandDirection}" Value="Down">
                <Setter Property="Template" Value="{DynamicResource DownLayExpander}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ExpandDirection}" Value="Lef">
                <Setter Property="Template" Value="{DynamicResource LeftLayExpander}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ExpandDirection}" Value="Right">
                <Setter Property="Template" Value="{DynamicResource DownLayExpander}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ExpandDirection}" Value="Up">
                <Setter Property="Template" Value="{DynamicResource UpLayExpander}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource LayExpanderStyle}" TargetType="{x:Type Lay:LayExpander}" />
</ResourceDictionary>