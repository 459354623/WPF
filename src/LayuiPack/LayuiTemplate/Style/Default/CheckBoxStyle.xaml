<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Lay="clr-namespace:LayuiTemplate.Control">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LayuiTemplate;component/Style/Default/ColorStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Lay:LayCheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#D2D2D2" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusBase}" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="Type" Value="Primary">
                <Setter Property="Background" Value="White" />
                <Setter Property="IconSize" Value="30" />
                <Setter Property="HoverBorderBrush" Value="{DynamicResource CyanBlue}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Lay:LayCheckBox}">
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Viewbox Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconSize}" Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconSize}">
                                    <Border
                                        x:Name="checkBoxBorder"
                                        Width="30"
                                        Height="30"
                                        Margin="1"
                                        Padding="4"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="White"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                        <Viewbox>
                                            <TextBlock
                                                x:Name="textBlock"
                                                FontFamily="{DynamicResource IconFont}"
                                                FontSize="20"
                                                Foreground="White"
                                                Opacity="0"
                                                Text="&#xf00c;" />
                                        </Viewbox>
                                    </Border>
                                </Viewbox>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  内容为空时触发的效果  -->
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasContent" Value="true">
                                    <!-- <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />-->
                                </Trigger>
                                <!--  鼠标移上去触发的效果  -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HoverBorderBrush}" />
                                </Trigger>
                                <!--  复选框被禁止时的效果  -->
                                <Trigger Property="IsEnabled" Value="false" />
                                <!--  鼠标点击后的效果  -->
                                <Trigger Property="IsPressed" Value="true" />
                                <!--  被选中后的效果  -->
                                <Trigger Property="IsChecked" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="checkBoxBorder"
                                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource CyanBlueEffect}"
                                                    Duration="0:0:0.2" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="1"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="checkBoxBorder"
                                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                    Duration="0:0:0.2" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--  未选择时的效果  -->
                                <Trigger Property="IsChecked" Value="{x:Null}" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>