<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Lay="clr-namespace:LayUI.Wpf.Controls">
    <Style x:Key="LayMenuItemStyle" TargetType="Lay:LayMenuItem">
        <Style.Resources>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type Lay:LayMenuItem}">
                <Border x:Name="Border" Background="Transparent">
                    <Grid>
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="-8"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Bottom"
                            PopupAnimation="Fade">
                            <Grid Background="Transparent" Effect="{DynamicResource LayShadow}">
                                <Border
                                    x:Name="SubmenuBorder"
                                    Margin="3"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                    <ScrollViewer CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true" />
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True" />
                    <Trigger Property="IsEnabled" Value="False" />
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" Background="Transparent">
                    <Grid>
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.1" Color="{DynamicResource LightBlackEffect}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False" />
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border
                    x:Name="Border"
                    Padding="5,0"
                    Background="Transparent">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="Icon"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <Border
                            x:Name="Check"
                            Width="15"
                            Height="13"
                            Visibility="Collapsed">
                            <Path x:Name="CheckMark" />
                        </Border>
                        <ContentPresenter
                            x:Name="HeaderHost"
                            Grid.Column="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="2"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{TemplateBinding InputGestureText}" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.1" Color="{DynamicResource LightBlackEffect}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false" />
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border
                    x:Name="Border"
                    Padding="5,0"
                    Background="Transparent">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="Icon"
                            VerticalAlignment="Center"
                            ContentSource="Icon" />
                        <ContentPresenter
                            x:Name="HeaderHost"
                            Grid.Column="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="2"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Text="{TemplateBinding InputGestureText}" />
                        <Path
                            Grid.Column="3"
                            Width="15"
                            Height="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M966.4 323.2c-9.6-9.6-25.6-9.6-35.2 0l-416 416-425.6-416c-9.6-9.6-25.6-9.6-35.2 0-9.6 9.6-9.6 25.6 0 35.2l441.6 432c9.6 9.6 25.6 9.6 35.2 0l435.2-432C976 345.6 976 332.8 966.4 323.2z"
                            Fill="{DynamicResource Black}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="8"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Right"
                            PopupAnimation="Fade">
                            <Grid Effect="{DynamicResource LayShadow}">
                                <Border
                                    x:Name="SubmenuBorder"
                                    Margin="3"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                    <ScrollViewer CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.1" Color="{DynamicResource LightBlackEffect}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True" />
                    <Trigger Property="IsEnabled" Value="false" />
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Height" Value="40" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource LayMenuItemStyle}" TargetType="Lay:LayMenuItem" />
</ResourceDictionary>